{"version":3,"file":"offsite_payments_app_extension_schema.js","sourceRoot":"","sources":["../../../../../../src/cli/models/extensions/specifications/payments_app_extension_schemas/offsite_payments_app_extension_schema.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseSchema} from '../../schemas.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\n\nexport type OffsitePaymentsAppExtensionConfigType = zod.infer<typeof OffsitePaymentsAppExtensionSchema>\n\nconst MAX_LABEL_SIZE = 50\nexport const OFFSITE_TARGET = 'payments.offsite.render'\nexport const OffsitePaymentsAppExtensionSchema = BaseSchema.extend({\n  targeting: zod.array(zod.object({target: zod.literal(OFFSITE_TARGET)})).length(1),\n  api_version: zod.string(),\n  payment_session_url: zod.string().url(),\n  refund_session_url: zod.string().url().optional(),\n  capture_session_url: zod.string().url().optional(),\n  void_session_url: zod.string().url().optional(),\n  confirmation_callback_url: zod.string().url().optional(),\n  merchant_label: zod.string().max(MAX_LABEL_SIZE),\n  buyer_label: zod.string().max(MAX_LABEL_SIZE).optional(),\n  buyer_label_translations: zod.array(zod.object({locale: zod.string(), label: zod.string()})).optional(),\n  supports_oversell_protection: zod.boolean().optional(),\n  supports_3ds: zod.boolean(),\n  supports_installments: zod.boolean(),\n  supports_deferred_payments: zod.boolean(),\n  supported_countries: zod.array(zod.string()),\n  supported_payment_methods: zod.array(zod.string()),\n  test_mode_available: zod.boolean(),\n  input: zod\n    .object({\n      metafield_identifiers: zod\n        .object({\n          namespace: zod.string(),\n          key: zod.string(),\n        })\n        .optional(),\n    })\n    .optional(),\n})\n  .refine((schema) => !schema.supports_oversell_protection || schema.confirmation_callback_url, {\n    message: 'Property required when supports_oversell_protection is true',\n    path: ['confirmation_callback_url'],\n  })\n  .refine((schema) => schema.supports_installments === schema.supports_deferred_payments, {\n    message: 'supports_installments and supports_deferred_payments must be the same',\n  })\n\nexport async function offsitePaymentsAppExtensionDeployConfig(\n  config: OffsitePaymentsAppExtensionConfigType,\n): Promise<{[key: string]: unknown} | undefined> {\n  return {\n    target: config.targeting[0]!.target,\n    api_version: config.api_version,\n    start_payment_session_url: config.payment_session_url,\n    start_refund_session_url: config.refund_session_url,\n    start_capture_session_url: config.capture_session_url,\n    start_void_session_url: config.void_session_url,\n    confirmation_callback_url: config.confirmation_callback_url,\n    merchant_label: config.merchant_label,\n    supported_countries: config.supported_countries,\n    supported_payment_methods: config.supported_payment_methods,\n    test_mode_available: config.test_mode_available,\n    default_buyer_label: config.buyer_label,\n    buyer_label_to_locale: config.buyer_label_translations,\n    supports_oversell_protection: config.supports_oversell_protection,\n    supports_3ds: config.supports_3ds,\n    supports_deferred_payments: config.supports_deferred_payments,\n    supports_installments: config.supports_installments,\n  }\n}\n"]}